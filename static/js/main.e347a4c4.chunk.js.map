{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/brain.gif","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/Register/Register.js","components/Signin/Signin.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","alt","src","brain","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","Rank","name","entries","FaceRecognition","imageUrl","box","id","heigh","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Register","props","onNameChange","event","setState","target","value","onEmailChange","email","onPasswordChange","password","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","state","then","response","json","user","loadUser","htmlFor","this","React","Component","Signin","signInEmail","signInPassword","class","href","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","console","log","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","err","init","particlesInit","loaded","particlesLoaded","background","color","fpsLimit","interactivity","detectsOn","events","enable","mode","onHover","resize","modes","bubble","distance","duration","opacity","size","push","quantity","repulse","particles","links","collisions","move","direction","outMode","random","speed","straight","number","density","value_area","shape","detectRetina","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e347a4c4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) =>{\r\n    if (isSignedIn) {\r\n        return (\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n            </nav>\r\n        );\r\n        \r\n    }else {\r\n        return(\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\r\n                <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n            </nav>\r\n        );\r\n        \r\n    }\r\n}\r\n\r\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/brain.ec4cca6b.gif\";","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css'\r\nimport brain from './brain.gif'\r\n\r\n\r\nconst Logo = () =>{\r\n    return (\r\n        <div className='ma4 mt0'>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n                <div className=\"Tilt-inner\"> <img alt = 'logo' src={brain} /> </div>\r\n            </Tilt>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css'\r\n\r\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) =>{\r\n    return (\r\n        <div>\r\n            <p className='f3'>\r\n                {'This Magic Brain will detect faces in your pictures. Give it a try;)'}\r\n            </p>\r\n            <div className='center'>\r\n                <div className='form center pa4 br3 shadow-5'>\r\n                    <input className='f4 pa2 w-70 center' type='tex' onChange={onInputChange}/>\r\n                    <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-pink' onClick={onButtonSubmit}>Detect</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst Rank = ({name, entries}) =>{\r\n    return (\r\n        <div>\r\n            <div className='white f3'>\r\n                {`${name}, your current rank is...`}\r\n            </div>\r\n            <div className='white f1'>\r\n                {entries}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n  return (\r\n    <div className='center ma'>\r\n      <div className='absolute mt2'>\r\n        <img id='inputimage' alt='' src={imageUrl} width='500px' heigh='auto'/>\r\n        <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\nimport 'tachyons';\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            name:''\r\n        }\r\n    }\r\n    onNameChange = (event) => {\r\n        this.setState({name: event.target.value})\r\n    }\r\n    onEmailChange = (event) => {\r\n        this.setState({email: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({password: event.target.value})\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch('http://localhost:3000/register', {\r\n            method: 'post',\r\n            headers:{'Content-Type':'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                name: this.state.name\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(user => {\r\n            if (user.id) {\r\n                this.props.loadUser(user);\r\n                this.props.onRouteChange('home');\r\n            }\r\n        }) \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <article className=\"br3 ba dark-gray b--black-10 mv6 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"text\">Name</label>\r\n                                <input \r\n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                    type=\"text\" \r\n                                    name=\"name\"  \r\n                                    id=\"name\" \r\n                                    onChange={this.onNameChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input \r\n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                    type=\"email\" \r\n                                    name=\"email-address\"  \r\n                                    id=\"email-address\" \r\n                                    onChange={this.onEmailChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                type=\"password\" \r\n                                name=\"password\"  \r\n                                id=\"password\" \r\n                                onChange={this.onPasswordChange}\r\n                                />\r\n                            </div>\r\n                            <label className=\"pa0 ma0 lh-copy f6 pointer\"><input type=\"checkbox\" /> Remember me</label>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            <input \r\n                                onClick={this.onSubmitSignIn}\r\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                                type=\"submit\" \r\n                                value=\"Register\" \r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport 'tachyons';\r\n\r\nclass Signin extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            signInEmail: '',\r\n            signInPassword: ''\r\n        }\r\n    }\r\n    onEmailChange = (event) => {\r\n        this.setState({signInEmail: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({signInPassword: event.target.value})\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch('http://localhost:3000/signin', {\r\n            method: 'post',\r\n            headers:{'Content-Type':'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.signInEmail,\r\n                password: this.state.signInPassword\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(user => {\r\n            if (user.id) {\r\n                this.props.loadUser(user)\r\n                this.props.onRouteChange('home');\r\n            }\r\n        }) \r\n    }\r\n    render() {\r\n        return (\r\n            <article className=\"br3 ba dark-gray b--black-10 mv6 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input \r\n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                    type=\"email\" \r\n                                    name=\"email-address\"  \r\n                                    id=\"email-address\"\r\n                                    onChange={this.onEmailChange}\r\n                                />\r\n                            </div>\r\n                            <div class=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                <input \r\n                                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                    type=\"password\" \r\n                                    name=\"password\"  \r\n                                    id=\"password\"\r\n                                    onChange={this.onPasswordChange}\r\n                                />\r\n                            </div>\r\n                            <label className=\"pa0 ma0 lh-copy f6 pointer\"><input type=\"checkbox\" /> Remember me</label>\r\n                        </fieldset>\r\n                        <div class=\"\">\r\n                            <input \r\n                                onClick={this.onSubmitSignIn}\r\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                                type=\"submit\" \r\n                                value=\"Sign in\" \r\n                            />\r\n                        </div>\r\n                        <div className=\"lh-copy mt3\">\r\n                            <p onClick={() => this.props.onRouteChange('register')} href=\"#0\" className=\"f6 link dim black db pointer\">Register</p>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signin;","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport Logo from './components/Logo/Logo';\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\r\nimport Rank from './components/Rank/Rank';\r\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\r\nimport Register from './components/Register/Register';\r\nimport Signin from './components/Signin/Signin';\r\nimport Particles from \"react-tsparticles\";\r\n\r\n//import { response } from 'express';\r\n\r\nconst initialState = {\r\n  input:'',\r\n  imageUrl:'',\r\n  box:{},\r\n  route: 'signin',\r\n  isSignedIn: false,\r\n  user:{\r\n    id: '',\r\n    name: '',\r\n    email: '',\r\n    entries: 0,\r\n    joined: ''\r\n  }\r\n}\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      input:'',\r\n      imageUrl:'',\r\n      box:{},\r\n      route: 'signin',\r\n      isSignedIn: false,\r\n      user:{\r\n        id: '',\r\n        name: '',\r\n        email: '',\r\n        entries: 0,\r\n        joined: ''\r\n      }\r\n    }\r\n  }\r\n\r\n  loadUser = (data) => {\r\n    this.setState({user:{\r\n      id: data.id,\r\n      name: data.name,\r\n      email: data.name,\r\n      password: data.password,\r\n      entries: data.entries,\r\n      joined: data.joined\r\n    }})\r\n  } \r\n\r\n  calculateFaceLocation = (data) => {\r\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n    const image = document.getElementById('inputimage');\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n    console.log(width, height)\r\n    return {\r\n      leftCol: clarifaiFace.left_col * width,\r\n      topRow: clarifaiFace.top_row * height,\r\n      rightCol: width - (clarifaiFace.right_col * width),\r\n      bottomRow: height - (clarifaiFace.bottom_row * height),\r\n    }\r\n  }\r\n\r\n  displayFaceBox = (box) => {\r\n    console.log(box)\r\n    this.setState({box: box});\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    this.setState({input: event.target.value})\r\n  }\r\n\r\n  onButtonSubmit= () =>{\r\n    this.setState({imageUrl: this.state.input})\r\n    fetch('http://localhost:3000/imageurl', {\r\n      method: 'post',\r\n      headers:{'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        input: this.state.input\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then( response => {\r\n      if (response) {\r\n        fetch('http://localhost:3000/image', {\r\n          method: 'put',\r\n          headers:{'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n            id: this.state.user.id\r\n          })\r\n        })\r\n        .then(response => response.json())\r\n        .then(count => {\r\n          this.setState(\r\n            this.setState(Object.assign(this.state.user, {entries: count}))\r\n          )\r\n        })\r\n        .catch(console.log('Connot connect to server'))\r\n      }\r\n      this.displayFaceBox(this.calculateFaceLocation(response))\r\n    })\r\n    .catch(err=> console.log(err));\r\n  }\r\n\r\n  onRouteChange = (route) => {\r\n    if (route === 'signout'){\r\n      this.setState(initialState)\r\n    } else if (route === 'home') {\r\n      this.setState({isSignedIn: true})\r\n    }\r\n    this.setState({route: route});\r\n  }\r\n\r\n  render() {\r\n    const {isSignedIn, imageUrl, route, box} = this.state;\r\n      return (\r\n        <div className=\"App\">\r\n          <Particles\r\n            className='Particles'\r\n            id=\"tsparticles\"\r\n            init={this.particlesInit}\r\n            loaded={this.particlesLoaded}\r\n            options={{\r\n              background: {\r\n                color: {\r\n                  value: \"#00000\",\r\n                },\r\n              },\r\n          fpsLimit: 60,\r\n          interactivity: {\r\n            detectsOn: \"canvas\",\r\n            events: {\r\n              onClick: {\r\n                enable: true,\r\n                mode: \"push\",\r\n              },\r\n              onHover: {\r\n                enable: true,\r\n                mode: \"repulse\",\r\n              },\r\n              resize: true,\r\n            },\r\n            modes: {\r\n              bubble: {\r\n                distance: 400,\r\n                duration: 2,\r\n                opacity: 0.8,\r\n                size: 40,\r\n              },\r\n              push: {\r\n                quantity: 4,\r\n              },\r\n              repulse: {\r\n                distance: 200,\r\n                duration: 0.4,\r\n              },\r\n            },\r\n          },\r\n          particles: {\r\n            color: {\r\n              value: \"#FFC0CB\",\r\n            },\r\n            links: {\r\n              color: \"#FFC0CB\",\r\n              distance: 150,\r\n              enable: true,\r\n              opacity: 0.5,\r\n              width: 1,\r\n            },\r\n            collisions: {\r\n              enable: true,\r\n            },\r\n            move: {\r\n              direction: \"none\",\r\n              enable: true,\r\n              outMode: \"bounce\",\r\n              random: false,\r\n              speed: 2,\r\n              straight: false,\r\n            },\r\n            number: {\r\n              density: {\r\n                enable: true,\r\n                value_area: 800,\r\n              },\r\n              value: 80,\r\n            },\r\n            opacity: {\r\n              value: 0.5,\r\n            },\r\n            shape: {\r\n              type: \"circle\",\r\n            },\r\n            size: {\r\n              random: true,\r\n              value: 8,\r\n            },\r\n          },\r\n          detectRetina: true,\r\n        }}\r\n      />\r\n      <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\r\n          \r\n      {route === 'home' \r\n      ?<div>\r\n        <Logo />\r\n        <Rank \r\n          name={this.state.user.name} \r\n          entries={this.state.user.entries}\r\n        />\r\n        <ImageLinkForm \r\n          onInputChange={this.onInputChange} \r\n          onButtonSubmit={this.onButtonSubmit}\r\n        />\r\n        <FaceRecognition box={box} imageUrl={imageUrl}/>\r\n      </div>\r\n        :(\r\n          route === 'signin'\r\n          ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\r\n          : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\r\n        )\r\n      }\r\n      </div>\r\n      );\r\n      }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}